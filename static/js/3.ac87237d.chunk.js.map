{"version":3,"sources":["hoc/WithAuthRedirect.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","maxLength50","maxLengthCr","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","name","component","Textarea","className","placeholder","validate","requeired","type","Messages","addMessage","dialogs","DialogContact","id","to","contacts","map","dialog","messages","message","AddMessageFormData","compose","connect","dispatch","messageBody","addMessageAC","Component","RedirectComponent","this","React"],"mappings":"iOAIMA,EAA6B,SAACC,GAClC,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,yCCCjBE,EAAcC,YAAY,IAmB1BC,EAAsBC,YAAU,CACpCC,KAAM,kBADoBD,EAjBL,SAACE,GACtB,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWC,IACXC,UAAU,iBACVC,YAAY,wBACZC,SAAU,CAACC,IAAWf,KAExB,wBAAQgB,KAAK,SAASJ,UAAU,SAAhC,wBA4CSK,EAjCE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,QAASrB,EAAa,EAAbA,OAIjCsB,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIZ,EAAW,EAAXA,KAC3B,OAAO,cAAC,IAAD,CAASa,GAAE,oBAAeD,GAA1B,SAAiCZ,KAG1C,OAAKX,EAEH,0BAASc,UAAU,kBAAnB,UACE,qBAAKA,UAAU,iBAAf,SACGO,EAAQI,SAASC,KAAI,SAACC,GAAD,OACpB,cAACL,EAAD,CAA+BX,KAAMgB,EAAOhB,MAAxBgB,EAAOJ,SAG/B,sBAAKT,UAAU,eAAf,UACE,qBAAKA,UAAU,SAAf,SACGO,EAAQO,SAASF,KAAI,SAACC,GAAD,OACpB,qBAAKb,UAAU,UAAf,SAEE,mBAAGA,UAAU,cAAb,SAA4Ba,EAAOE,WAFPF,EAAOJ,SAMzC,yBAAST,UAAU,aAAnB,SACE,cAACV,EAAD,CAAqBI,SAzBP,SAACsB,GACrBV,EAAWU,EAAmBD,oBAMZ,cAAC,IAAD,CAAUL,GAAI,Y,OCjBrBO,sBACbC,aAfsB,SAACjC,GACvB,MAAO,CACLsB,QAAStB,EAAMsB,YAIQ,SAACY,GAC1B,MAAO,CACLb,WAAY,SAACc,GACXD,EAASE,YAAaD,UFNa,SAACE,GAAe,IACjDC,EADgD,uKAGlD,OAAKC,KAAK/B,MAAMP,OACT,cAACoC,EAAD,eAAeE,KAAK/B,QADI,cAAC,IAAD,CAAUiB,GAAI,eAHK,GACtBe,IAAMH,WAWtC,OAJqCJ,YAAQlC,EAARkC,CACnCK,KEEWN,CAGbZ","file":"static/js/3.ac87237d.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport const WithAuthRedirectComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import React from \"react\";\nimport \"./Messages.css\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCr, requeired } from \"../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCr(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        name=\"message\"\n        component={Textarea}\n        className=\"newContentArea\"\n        placeholder=\"type your text here..\"\n        validate={[requeired, maxLength50]}\n      />\n      <button type=\"submit\" className=\"addBtn\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nconst AddMessageReduxForm = reduxForm({\n  form: \"messageAddForm\",\n})(AddMessageForm);\n\nconst Messages = ({ addMessage, dialogs, isAuth }) => {\n  const addNewMessage = (AddMessageFormData) => {\n    addMessage(AddMessageFormData.message);\n  };\n  const DialogContact = ({ id, name }) => {\n    return <NavLink to={`/messages/${id}`}>{name}</NavLink>;\n  };\n\n  if (!isAuth) return <Redirect to={\"/login\"} />;\n  return (\n    <section className=\"messagesSection\">\n      <div className=\"dialogContacts\">\n        {dialogs.contacts.map((dialog) => (\n          <DialogContact key={dialog.id} name={dialog.name} />\n        ))}\n      </div>\n      <div className=\"dialogWindow\">\n        <div className=\"dialog\">\n          {dialogs.messages.map((dialog) => (\n            <div className=\"message\" key={dialog.id}>\n              {/* <img src={icon} className=\"messageIcon\" alt=\"avatar\" /> */}\n              <p className=\"messageText\">{dialog.message}</p>\n            </div>\n          ))}\n        </div>\n        <section className=\"addSection\">\n          <AddMessageReduxForm onSubmit={addNewMessage} />\n        </section>\n      </div>\n    </section>\n  );\n};\n\nexport default Messages;\n","import \"./Messages.css\";\nimport { addMessageAC } from \"../../state/MessagesReducer\";\nimport { connect } from \"react-redux\";\nimport { WithAuthRedirectComponent } from \"../../hoc/WithAuthRedirect\";\nimport Messages from \"./Messages\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogs: state.dialogs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (messageBody) => {\n      dispatch(addMessageAC(messageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithAuthRedirectComponent\n)(Messages);\n"],"sourceRoot":""}